% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limma.R
\name{limma}
\alias{limma}
\alias{lm_fit}
\alias{lm_results}
\alias{results_names}
\title{Differential expression using limma}
\usage{
lm_fit(eset, design, logged2)

lm_results(object, contrast, independentFiltering = TRUE, alpha = 0.05,
  filter, theta, pAdjustMethod = "BH", ...)

results_names(object)
}
\arguments{
\item{eset}{an object of class ExpressionSet or a list with two components including data and samples.
eset must contain the information about samples.}

\item{design}{a formula which expresses how the expression for each gene depend on the variables in the sample data.
e.g.: ~ 0 + group (design with multiple groups ),  ~ group + condition (design with multiple variables)
and ~ genotype + treatment + genotype:treatment (design with interactions).}

\item{logged2}{logical value. Specify if the data are in log2 scale or not. Allowed values are TRUE or FALSE.}

\item{object}{an object of class "lm_fit" generated from the function lm_fit()}

\item{contrast}{specifies what comparison to extract from the object to build a results table.
Possible values include:
\itemize{
\item a character vector with three elements:
the name of a factor in the design formula, the name of group 1 and group 2 to be compared;
e.g.: c("group", "grp1", "grp2"). "grp1" is used as numerator and "grp2" as denominator for
computing the fold change.
\item a list of 2 character vectors to be compared. These names should be elements of lm_results_names(object).
e.g.: list(c("grp1","grp2"), c("grp3", "group4"))
}}

\item{independentFiltering}{logical, whether independent filtering should be applied automatically}

\item{alpha}{the significance cutoff used for optimizing the independent filtering (by default 0.1).}

\item{filter}{the vector of filter statistics over which the independent filtering will be optimized.}

\item{theta}{the quantiles at which to assess the number of rejections from independent filtering}

\item{pAdjustMethod}{method used to adjust the p-values for multiple testing.
Allowed values include "none", "BH", "BY" and "holm" (See ?p.adjust).}

\item{...}{other arguments to be passed to the function limma::topTable}
}
\value{
\itemize{
\item \bold{lm_fit()}: Returns an object of class "MArrayLM" (see limma:?lmFit) and "lm_fit".
Comprared to lmFit(), the object returned by lm_fit() contains supplementary variables named:
\itemize{
\item design_formula: which holds the design formula.
\item samples: annotation of each samples as provided in eset.
\item data: unlogged gene expression data
}
\item \bold{lm_results()}: Returns an object of class "DE_Results" which is a simple subclass of DataFrame (in S4Vectors)
containing log2 fold changes, base means across samples, t-test statistics, p-values
adjusted p-values. The function plot_MA() can be used to draw the results. (See ?plot_MA).
\item \bold{results_names()}: Returns the names of the estimated effects (coefficents) of the model.
}
}
\description{
Differential expression using limma:
\itemize{
\item \bold{lm_fit()}: Fit easily linear model for gene expression data using limma::lmFit().
\item \bold{lm_results()}: Extract results from lm_fit analysis. Compared to the function topTable(),
it performs automatically an independent filtering as described by Bourgon et al., PNAS 2010.
\item \bold{results_names()}: Returns the names of the estimated effects (coefficents) of the model
}
}
\examples{
\donttest{
# Load and prepare data
data(ALL_bcrneg)
ALL_bcrneg$mol.biol <- factor(make.names(ALL_bcrneg$mol.biol),
levels = c("NEG", "BCR.ABL"))

# Fit linear model
fit <- lm_fit(ALL_bcrneg, design = ~0+mol.biol, logged2 = TRUE)

# result names
results_names(fit)

# Results of differential expression
res <- lm_results(fit)

# Plot MA
plot_MA(res)

# Independent filtering threshold and rejection plot
 attr(res,"filterThreshold")

 plot(attr(res,"filterNumRej"),type="b",
 xlab="quantiles of 'baseMean'",
 ylab="number of rejections")

}
}
